import numpy as np
from scipy import integrate 
import matplotlib.pyplot as plt


# Defining function for Euler method

def eulerode (f, t, y, nmax, h):
    t_values = [t]
    y_values = [y]
    
    for i in range (nmax):
        y = y + f(t,y) * h
        t = t + h
        t_values.append(t)
        y_values.append(y)
    
    return np.array([t_values,y_values])

# Part 1 of Problem 1:

def f(x,y):
    return -9*y

x = 0
y = np.exp(1)
nmax = 100 
h = 0.01
solution = eulerode (f, x, y, nmax, h)

#plot the analytical solution
test_x = np.linspace(0, nmax*h, nmax)
test_y = np.exp(1-9*test_x)
plt.plot(test_x, test_y,'red')
 
plt.xlabel('x')
plt.ylabel('y')
plt.scatter(solution[0], solution[1])
