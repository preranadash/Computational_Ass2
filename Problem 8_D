def f_ODE(t, y):
    return np.cos(2*t) + np.sin(3*t)

t = 0
y = 1

test_t = np.linspace(0, 1, 100)
test_y = (8 - 2 * np.cos(3*test_t) + 3 * np.sin(2*test_t))/6

plt.plot(test_t, test_y, 'red', label='Analytical Solution')


plt.xlabel('t')
plt.ylabel('y')
solution_RK45 = integrate.solve_ivp(f_ODE, [0, 1], [1], method='RK45' , t_eval=np.linspace(0, 1, 20))
plt.scatter(solution_RK45.t, solution_RK45.y[0])
