import numpy as np
from scipy.integrate import solve_ivp
import matplotlib.pyplot as plt

# Define the system of first-order ODEs
def equations(t, u):
    u1, u2, u3 = u
    du1_dt = u1 + 2*u2 - 2*u3 + np.exp(-t)
    du2_dt = u2 + u3 - 2* np.exp(-t)
    du3_dt = u1 + 2*u2 - np.exp(-t)
    return [du1_dt, du2_dt, du3_dt]

# Define the initial conditions
u0 = [0, -1, 1]  # u1(0) = 1, u2(0) = -1, u3(0) = 1

# Define the range of t values
t_range = (0, 1)  # Adjust the range as needed

# Solve the system of ODEs using RK45 method
sol = solve_ivp(equations, t_range, u0, method='RK45', t_eval=np.linspace(*t_range, 100))

# Plot the solutions
plt.plot(sol.t, sol.y[0], label='u1(t)')
plt.plot(sol.t, sol.y[1], label='u2(t)')
plt.plot(sol.t, sol.y[2], label='u3(t)')
plt.xlabel('t')
plt.ylabel('u')
plt.title('Solutions of the System of ODEs using RK45')
plt.legend()
plt.grid(True)
plt.show()
